{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\WEB_U\\\\LAB1_REG\\\\src\\\\pages\\\\PracticalWork1.js\";\nimport React from 'react';\nimport '../styles/LabStyle/PracticalWork1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDates = (startDate, days) => {\n  const dates = [];\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + i);\n    const dayOfWeek = date.getDay();\n    // Only include weekdays (Monday to Friday)\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\n      dates.push(`${date.getDate().toString().padStart(2, '0')}.09.2024`);\n    }\n  }\n  return dates;\n};\nconst generateSchedule = () => {\n  const subjects = ['ВМ', 'КДС', 'Python', 'C++', 'C#'];\n  const types = ['[Лб]', '[Пз]', '[Лк]'];\n  const timeSlots = ['08:00 - 09:30', '09:40 - 11:10', '11:20 - 12:50', '13:00 - 14:30', '14:40 - 16:10', '16:20 - 17:50'];\n  const schedule = [];\n  const totalDays = 30; // September has 30 days\n  const dates = generateDates(new Date(2024, 8, 1), totalDays); // Start from September 1st\n\n  for (let i = 0; i < dates.length; i += 7) {\n    const weekDates = dates.slice(i, i + 7);\n    const weekSchedule = weekDates.map(date => {\n      const numLessons = Math.floor(Math.random() * 4) + 3; // 3 to 4 lessons per day\n      const lessons = [];\n      let startSlot = Math.floor(Math.random() * 3); // 0 for 1st pair, 1 for 2nd, 2 for 3rd pair\n\n      for (let j = 0; j < numLessons; j++) {\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\n        const type = types[Math.floor(Math.random() * types.length)];\n        lessons[startSlot + j] = `${subject} ${type}`;\n      }\n      return {\n        date,\n        time: timeSlots.slice(startSlot, startSlot + numLessons).join(', '),\n        lessons: [lessons[0] || '', lessons[1] || '', lessons[2] || '', lessons[3] || '', lessons[4] || '', lessons[5] || '']\n      };\n    });\n    schedule.push(weekSchedule);\n  }\n  return schedule;\n};\nconst scheduleData = generateSchedule();\nconst getLessonClass = type => {\n  if (type.includes('[Лб]')) return 'lab'; // Lab\n  if (type.includes('[Пз]')) return 'practice'; // Practice\n  if (type.includes('[Лк]')) return 'lecture'; // Lecture\n  return '';\n};\nconst PracticalWork1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0420\\u043E\\u0437\\u043A\\u043B\\u0430\\u0434 \\u0437\\u0430\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u0432\\u0435\\u0440\\u0435\\u0441\\u0435\\u043D\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-scroll-container\",\n      children: scheduleData.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-block\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"schedule-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0427\\u0430\\u0441/\\u0414\\u0430\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), week.map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"date-header\",\n                children: day.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), week.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {}, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: day.time.map((time, timeIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: getLessonClass(day.lessons[timeIndex]),\n                children: day.lessons[timeIndex]\n              }, dayIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this))]\n            }, timeIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, weekIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c = PracticalWork1;\nexport default PracticalWork1;\nvar _c;\n$RefreshReg$(_c, \"PracticalWork1\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","generateDates","startDate","days","dates","i","date","Date","setDate","getDate","dayOfWeek","getDay","push","toString","padStart","generateSchedule","subjects","types","timeSlots","schedule","totalDays","length","weekDates","slice","weekSchedule","map","numLessons","Math","floor","random","lessons","startSlot","j","subject","type","time","join","scheduleData","getLessonClass","includes","PracticalWork1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","week","weekIndex","day","index","_","timeIndex","dayIndex","_c","$RefreshReg$"],"sources":["D:/STUDY/WEB_U/LAB1_REG/src/pages/PracticalWork1.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/LabStyle/PracticalWork1.css';\r\n\r\nconst generateDates = (startDate, days) => {\r\n  const dates = [];\r\n  for (let i = 0; i < days; i++) {\r\n    const date = new Date(startDate);\r\n    date.setDate(startDate.getDate() + i);\r\n    const dayOfWeek = date.getDay();\r\n    // Only include weekdays (Monday to Friday)\r\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\r\n      dates.push(`${date.getDate().toString().padStart(2, '0')}.09.2024`);\r\n    }\r\n  }\r\n  return dates;\r\n};\r\n\r\nconst generateSchedule = () => {\r\n  const subjects = ['ВМ', 'КДС', 'Python', 'C++', 'C#'];\r\n  const types = ['[Лб]', '[Пз]', '[Лк]'];\r\n  const timeSlots = [\r\n    '08:00 - 09:30',\r\n    '09:40 - 11:10',\r\n    '11:20 - 12:50',\r\n    '13:00 - 14:30',\r\n    '14:40 - 16:10',\r\n    '16:20 - 17:50'\r\n  ];\r\n  const schedule = [];\r\n  const totalDays = 30; // September has 30 days\r\n  const dates = generateDates(new Date(2024, 8, 1), totalDays); // Start from September 1st\r\n\r\n  for (let i = 0; i < dates.length; i += 7) {\r\n    const weekDates = dates.slice(i, i + 7);\r\n    const weekSchedule = weekDates.map(date => {\r\n      const numLessons = Math.floor(Math.random() * 4) + 3; // 3 to 4 lessons per day\r\n      const lessons = [];\r\n      \r\n      let startSlot = Math.floor(Math.random() * 3); // 0 for 1st pair, 1 for 2nd, 2 for 3rd pair\r\n\r\n      for (let j = 0; j < numLessons; j++) {\r\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\r\n        const type = types[Math.floor(Math.random() * types.length)];\r\n        lessons[startSlot + j] = `${subject} ${type}`;\r\n      }\r\n\r\n      return {\r\n        date,\r\n        time: timeSlots.slice(startSlot, startSlot + numLessons).join(', '),\r\n        lessons: [\r\n          lessons[0] || '',\r\n          lessons[1] || '',\r\n          lessons[2] || '',\r\n          lessons[3] || '',\r\n          lessons[4] || '',\r\n          lessons[5] || '',\r\n        ],\r\n      };\r\n    });\r\n    \r\n    schedule.push(weekSchedule);\r\n  }\r\n  \r\n  return schedule;\r\n};\r\n\r\nconst scheduleData = generateSchedule();\r\n\r\nconst getLessonClass = (type) => {\r\n  if (type.includes('[Лб]')) return 'lab'; // Lab\r\n  if (type.includes('[Пз]')) return 'practice'; // Practice\r\n  if (type.includes('[Лк]')) return 'lecture'; // Lecture\r\n  return '';\r\n};\r\n\r\nconst PracticalWork1 = () => {\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h3>Розклад занять на вересень</h3>\r\n      <div className=\"schedule-scroll-container\">\r\n        {scheduleData.map((week, weekIndex) => (\r\n          <div className=\"week-block\" key={weekIndex}>\r\n            <table className=\"schedule-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Час/Дата</th>\r\n                  {week.map((day, index) => (\r\n                    <th key={index} className=\"date-header\">{day.date}</th>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <th></th>\r\n                  {week.map((_, index) => (\r\n                    <th key={index}></th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {day.time.map((time, timeIndex) => (\r\n                  <tr key={timeIndex}>\r\n                    <td>{time}</td>\r\n                    {week.map((day, dayIndex) => (\r\n                      <td key={dayIndex} className={getLessonClass(day.lessons[timeIndex])}>\r\n                        {day.lessons[timeIndex]}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticalWork1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}