{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\WEB_U\\\\LAB1_REG\\\\src\\\\pages\\\\PracticalWork1.js\";\nimport React from 'react';\nimport '../styles/LabStyle/PracticalWork1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracticalWork1 = () => {\n  // Пример данных расписания\n  const scheduleData = [{\n    date: '2024-09-16',\n    pairs: ['Mathematics', 'Physics', 'Chemistry', 'Biology', 'History', 'English']\n  }, {\n    date: '2024-09-17',\n    pairs: ['Literature', 'Geography', 'Arts', 'Programming', 'Philosophy', 'Economics']\n  }\n  // Добавьте другие дни по аналогии\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"schedule-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), scheduleData.map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 6,\n            className: \"date-header\",\n            children: day.date\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), scheduleData.flatMap(() => Array(6).fill(null).map((_, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Pair \", idx + 1]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 51\n          }, this)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ['08:00 - 09:30', '09:45 - 11:15', '11:30 - 13:00', '13:15 - 14:45', '15:00 - 16:30', '16:45 - 18:15'].map((time, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), scheduleData.flatMap(day => day.pairs.map((pair, pairIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pair\n          }, `${day.date}-${pairIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)))]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PracticalWork1;\nexport default PracticalWork1;\nvar _c;\n$RefreshReg$(_c, \"PracticalWork1\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PracticalWork1","scheduleData","date","pairs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","colSpan","flatMap","Array","fill","_","idx","time","rowIndex","pair","pairIndex","_c","$RefreshReg$"],"sources":["D:/STUDY/WEB_U/LAB1_REG/src/pages/PracticalWork1.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/LabStyle/PracticalWork1.css'; \r\n\r\nconst PracticalWork1 = () => {\r\n  // Пример данных расписания\r\n  const scheduleData = [\r\n    { date: '2024-09-16', pairs: ['Mathematics', 'Physics', 'Chemistry', 'Biology', 'History', 'English'] },\r\n    { date: '2024-09-17', pairs: ['Literature', 'Geography', 'Arts', 'Programming', 'Philosophy', 'Economics'] },\r\n    // Добавьте другие дни по аналогии\r\n  ];\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <table className=\"schedule-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Time</th>\r\n            {scheduleData.map((day, index) => (\r\n              <th key={index} colSpan={6} className=\"date-header\">{day.date}</th>\r\n            ))}\r\n          </tr>\r\n          <tr>\r\n            <th></th>\r\n            {scheduleData.flatMap(() => (\r\n              Array(6).fill(null).map((_, idx) => <th key={idx}>Pair {idx + 1}</th>)\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {['08:00 - 09:30', '09:45 - 11:15', '11:30 - 13:00', '13:15 - 14:45', '15:00 - 16:30', '16:45 - 18:15'].map((time, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              <td>{time}</td>\r\n              {scheduleData.flatMap(day => (\r\n                day.pairs.map((pair, pairIndex) => (\r\n                  <td key={`${day.date}-${pairIndex}`}>{pair}</td>\r\n                ))\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticalWork1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}