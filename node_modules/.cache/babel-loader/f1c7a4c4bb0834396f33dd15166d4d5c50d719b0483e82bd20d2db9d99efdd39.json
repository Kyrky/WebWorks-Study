{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\WEB_U\\\\LAB1_REG\\\\src\\\\pages\\\\PracticalWork1.js\";\nimport React from 'react';\nimport '../styles/LabStyle/PracticalWork1.css';\n\n// Генерация дат рабочих дней для сентября 2024 года\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateSchedule = () => {\n  const startDate = new Date(2024, 8, 1); // 1 сентября 2024\n  const endDate = new Date(2024, 8, 30); // 30 сентября 2024\n  const schedule = [];\n  const subjects = ['ВМ', 'КДС', 'Python', 'Фіз-ра', 'C++', 'C#']; // Предметы\n  const times = ['8:00-9:30', '10:00-11:30', '12:00-13:30']; // Время пар\n  const types = ['[Лк]', '[Пз]', '[Лб]']; // Типы занятий\n\n  for (let day = startDate; day <= endDate; day.setDate(day.getDate() + 1)) {\n    if (day.getDay() !== 0 && day.getDay() !== 6) {\n      // Пропускаем выходные\n      const lessons = [];\n\n      // Генерируем от 1 до 3 пар на день\n      const numLessons = Math.floor(Math.random() * 3) + 1;\n      for (let i = 0; i < numLessons; i++) {\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\n        const time = times[i]; // Каждая пара идет по времени\n        const type = types[Math.floor(Math.random() * types.length)];\n        lessons.push({\n          time,\n          subject: `${subject} ${type}`\n        });\n      }\n      schedule.push({\n        date: day.toLocaleDateString('uk-UA', {\n          day: 'numeric',\n          month: 'numeric',\n          year: 'numeric'\n        }),\n        lessons\n      });\n    }\n  }\n  return schedule;\n};\nconst PracticalWork1 = () => {\n  const schedule = generateSchedule();\n\n  // Определяем класс для типа урока\n  const getLessonClass = type => {\n    if (type.includes('[Лб]')) return 'lab'; // Лабораторные\n    if (type.includes('[Пз]')) return 'practice'; // Практические\n    if (type.includes('[Лк]')) return 'lecture'; // Лекции\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0430 \\u0440\\u043E\\u0431\\u043E\\u0442\\u0430 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-table\",\n      children: schedule.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-header\",\n          children: day.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), day.lessons.map((lesson, lessonIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `lesson ${getLessonClass(lesson.subject)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: lesson.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subject\",\n            children: lesson.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, lessonIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = PracticalWork1;\nexport default PracticalWork1;\nvar _c;\n$RefreshReg$(_c, \"PracticalWork1\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","generateSchedule","startDate","Date","endDate","schedule","subjects","times","types","day","setDate","getDate","getDay","lessons","numLessons","Math","floor","random","i","subject","length","time","type","push","date","toLocaleDateString","month","year","PracticalWork1","getLessonClass","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","lesson","lessonIndex","_c","$RefreshReg$"],"sources":["D:/STUDY/WEB_U/LAB1_REG/src/pages/PracticalWork1.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/LabStyle/PracticalWork1.css';\r\n\r\n// Генерация дат рабочих дней для сентября 2024 года\r\nconst generateSchedule = () => {\r\n  const startDate = new Date(2024, 8, 1); // 1 сентября 2024\r\n  const endDate = new Date(2024, 8, 30); // 30 сентября 2024\r\n  const schedule = [];\r\n  const subjects = ['ВМ', 'КДС', 'Python', 'Фіз-ра', 'C++', 'C#']; // Предметы\r\n  const times = ['8:00-9:30', '10:00-11:30', '12:00-13:30']; // Время пар\r\n  const types = ['[Лк]', '[Пз]', '[Лб]']; // Типы занятий\r\n\r\n  for (let day = startDate; day <= endDate; day.setDate(day.getDate() + 1)) {\r\n    if (day.getDay() !== 0 && day.getDay() !== 6) { // Пропускаем выходные\r\n      const lessons = [];\r\n\r\n      // Генерируем от 1 до 3 пар на день\r\n      const numLessons = Math.floor(Math.random() * 3) + 1;\r\n      for (let i = 0; i < numLessons; i++) {\r\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\r\n        const time = times[i]; // Каждая пара идет по времени\r\n        const type = types[Math.floor(Math.random() * types.length)];\r\n        lessons.push({ time, subject: `${subject} ${type}` });\r\n      }\r\n\r\n      schedule.push({\r\n        date: day.toLocaleDateString('uk-UA', { day: 'numeric', month: 'numeric', year: 'numeric' }),\r\n        lessons,\r\n      });\r\n    }\r\n  }\r\n\r\n  return schedule;\r\n};\r\n\r\nconst PracticalWork1 = () => {\r\n  const schedule = generateSchedule();\r\n\r\n  // Определяем класс для типа урока\r\n  const getLessonClass = (type) => {\r\n    if (type.includes('[Лб]')) return 'lab'; // Лабораторные\r\n    if (type.includes('[Пз]')) return 'practice'; // Практические\r\n    if (type.includes('[Лк]')) return 'lecture'; // Лекции\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h3>Практична робота 1</h3>\r\n      <div className=\"schedule-table\">\r\n        {schedule.map((day, index) => (\r\n          <div key={index} className=\"day-block\">\r\n            <div className=\"date-header\">{day.date}</div>\r\n            {day.lessons.map((lesson, lessonIndex) => (\r\n              <div key={lessonIndex} className={`lesson ${getLessonClass(lesson.subject)}`}>\r\n                <span className=\"time\">{lesson.time}</span>\r\n                <span className=\"subject\">{lesson.subject}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticalWork1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}