{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\WEB_U\\\\LAB1_REG\\\\src\\\\pages\\\\PracticalWork1.js\";\nimport React from 'react';\nimport '../styles/LabStyle/PracticalWork1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDates = () => {\n  const dates = [];\n  const daysInMonth = 30; // September has 30 days\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = new Date(2024, 8, day); // September is month 8 (0-based index)\n    const dayOfWeek = date.getDay(); // 0 is Sunday, 1 is Monday, etc.\n    // Only include weekdays (Monday to Friday)\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\n      dates.push(`${day.toString().padStart(2, '0')}.09.2024`);\n    }\n  }\n  return dates;\n};\nconst generateSchedule = () => {\n  const subjects = ['ВМ', 'КДС', 'Python', 'C++', 'C#'];\n  const types = ['[Лб]', '[Пз]', '[Лк]'];\n  const schedule = [];\n  const dates = getDates();\n  for (let i = 0; i < dates.length; i++) {\n    const numLessons = Math.floor(Math.random() * 3) + 3; // 3 to 4 lessons per day\n    const lessons = [];\n    let startSlot = Math.floor(Math.random() * 3); // 0 for 1st pair, 1 for 2nd, 2 for 3rd pair\n\n    for (let j = 0; j < numLessons; j++) {\n      const subject = subjects[Math.floor(Math.random() * subjects.length)];\n      const type = types[Math.floor(Math.random() * types.length)];\n      lessons[startSlot + j] = `${subject} ${type}`;\n    }\n    schedule.push({\n      date: dates[i],\n      time: getTimeSlot(startSlot),\n      lessons: [lessons[0] || '', lessons[1] || '', lessons[2] || '', lessons[3] || '', lessons[4] || '', lessons[5] || '']\n    });\n  }\n  return schedule;\n};\nconst getTimeSlot = startSlot => {\n  switch (startSlot) {\n    case 0:\n      return '08:00 - 09:30';\n    case 1:\n      return '09:40 - 11:10';\n    case 2:\n      return '11:20 - 12:50';\n    default:\n      return '08:00 - 09:30';\n  }\n};\nconst scheduleData = generateSchedule();\nconst getLessonClass = type => {\n  if (type.includes('[Лб]')) return 'lab'; // Lab\n  if (type.includes('[Пз]')) return 'practice'; // Practice\n  if (type.includes('[Лк]')) return 'lecture'; // Lecture\n  return '';\n};\nconst PracticalWork1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0420\\u043E\\u0437\\u043A\\u043B\\u0430\\u0434 \\u0437\\u0430\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u0432\\u0435\\u0440\\u0435\\u0441\\u0435\\u043D\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-scroll-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"schedule-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0427\\u0430\\u0441/\\u0414\\u0430\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), scheduleData.map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"date-header\",\n              children: day.date\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), scheduleData.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {}, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scheduleData.map((slot, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: slot.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), slot.lessons.map((lesson, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: getLessonClass(lesson),\n              children: lesson\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = PracticalWork1;\nexport default PracticalWork1;\nvar _c;\n$RefreshReg$(_c, \"PracticalWork1\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getDates","dates","daysInMonth","day","date","Date","dayOfWeek","getDay","push","toString","padStart","generateSchedule","subjects","types","schedule","i","length","numLessons","Math","floor","random","lessons","startSlot","j","subject","type","time","getTimeSlot","scheduleData","getLessonClass","includes","PracticalWork1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_","slot","lesson","idx","_c","$RefreshReg$"],"sources":["D:/STUDY/WEB_U/LAB1_REG/src/pages/PracticalWork1.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/LabStyle/PracticalWork1.css';\r\n\r\nconst getDates = () => {\r\n  const dates = [];\r\n  const daysInMonth = 30; // September has 30 days\r\n\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const date = new Date(2024, 8, day); // September is month 8 (0-based index)\r\n    const dayOfWeek = date.getDay(); // 0 is Sunday, 1 is Monday, etc.\r\n    // Only include weekdays (Monday to Friday)\r\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\r\n      dates.push(`${day.toString().padStart(2, '0')}.09.2024`);\r\n    }\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nconst generateSchedule = () => {\r\n  const subjects = ['ВМ', 'КДС', 'Python', 'C++', 'C#'];\r\n  const types = ['[Лб]', '[Пз]', '[Лк]'];\r\n  const schedule = [];\r\n  const dates = getDates();\r\n\r\n  for (let i = 0; i < dates.length; i++) {\r\n    const numLessons = Math.floor(Math.random() * 3) + 3; // 3 to 4 lessons per day\r\n    const lessons = [];\r\n    \r\n    let startSlot = Math.floor(Math.random() * 3); // 0 for 1st pair, 1 for 2nd, 2 for 3rd pair\r\n\r\n    for (let j = 0; j < numLessons; j++) {\r\n      const subject = subjects[Math.floor(Math.random() * subjects.length)];\r\n      const type = types[Math.floor(Math.random() * types.length)];\r\n      lessons[startSlot + j] = `${subject} ${type}`;\r\n    }\r\n    \r\n    schedule.push({\r\n      date: dates[i],\r\n      time: getTimeSlot(startSlot),\r\n      lessons: [\r\n        lessons[0] || '',\r\n        lessons[1] || '',\r\n        lessons[2] || '',\r\n        lessons[3] || '',\r\n        lessons[4] || '',\r\n        lessons[5] || '',\r\n      ],\r\n    });\r\n  }\r\n  \r\n  return schedule;\r\n};\r\n\r\nconst getTimeSlot = (startSlot) => {\r\n  switch (startSlot) {\r\n    case 0: return '08:00 - 09:30';\r\n    case 1: return '09:40 - 11:10';\r\n    case 2: return '11:20 - 12:50';\r\n    default: return '08:00 - 09:30';\r\n  }\r\n};\r\n\r\nconst scheduleData = generateSchedule();\r\n\r\nconst getLessonClass = (type) => {\r\n  if (type.includes('[Лб]')) return 'lab'; // Lab\r\n  if (type.includes('[Пз]')) return 'practice'; // Practice\r\n  if (type.includes('[Лк]')) return 'lecture'; // Lecture\r\n  return '';\r\n};\r\n\r\nconst PracticalWork1 = () => {\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h3>Розклад занять на вересень</h3>\r\n      <div className=\"schedule-scroll-container\">\r\n        <table className=\"schedule-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Час/Дата</th>\r\n              {scheduleData.map((day, index) => (\r\n                <th key={index} className=\"date-header\">{day.date}</th>\r\n              ))}\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              {scheduleData.map((_, index) => (\r\n                <th key={index}></th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {scheduleData.map((slot, index) => (\r\n              <tr key={index}>\r\n                <td>{slot.time}</td>\r\n                {slot.lessons.map((lesson, idx) => (\r\n                  <td key={idx} className={getLessonClass(lesson)}>\r\n                    {lesson}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticalWork1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}